<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="quickstart" xmlns="http://pmd.sourceforge.net/ruleset/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">
	<description>Apex Ruleset</description>

	<!-- COMPLEXITY -->
	<rule ref="category/apex/design.xml/ExcessiveClassLength" message="Avoid really long classes (lines of code)">
		<priority>1</priority>
		<properties>
			<property name="minimum" value="1000" />
		</properties>
	</rule>
	<!-- PERFORMANCE -->
	<rule ref="category/apex/performance.xml/OperationWithLimitsInLoop" message="Avoid operations in loops that may hit governor limits">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/AvoidDirectAccessTriggerMap" message="Avoid directly accessing Trigger.old and Trigger.new">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/AvoidHardcodingId" message="Avoid hardcoding ID's">
		<priority>1</priority>
	</rule>

	<!-- NAMING -->
	<rule ref="category/apex/errorprone.xml/MethodWithSameNameAsEnclosingClass" message="Classes should not have non-constructor methods with the same name as the class">
		<priority>1</priority>
	</rule>

	<!-- TESTS -->
	<rule ref="category/apex/bestpractices.xml/ApexUnitTestShouldNotUseSeeAllDataTrue" message="@isTest(seeAllData=true) should not be used in Apex unit tests because it opens up the existing database data for unexpected modification by tests">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/bestpractices.xml/ApexUnitTestMethodShouldHaveIsTestAnnotation">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/TestMethodsMustBeInTestClasses">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/bestpractices.xml/ApexUnitTestClassShouldHaveAsserts" message="Apex unit test classes should have at least one System.assert() or assertEquals() or AssertNotEquals() call">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/bestpractices.xml/ApexAssertionsShouldIncludeMessage">
		<priority>1</priority>
	</rule>

	<!-- SECURITY -->
	<rule ref="category/apex/security.xml/ApexInsecureEndpoint" message="Apex callouts should use encrypted communication channels">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/ApexCSRF">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/security.xml/ApexOpenRedirect" message="Apex classes should safely redirect to a known location">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/security.xml/ApexSOQLInjection" message="Apex classes should escape variables merged in DML query">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/security.xml/ApexXSSFromURLParam" message="Apex classes should escape Strings obtained from URL parameters">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/security.xml/ApexXSSFromEscapeFalse" message="Apex classes should escape addError strings">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/security.xml/ApexBadCrypto" message="Apex Crypto should use random IV/key">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/security.xml/ApexCRUDViolation" message="Validate CRUD permission before SOQL/DML operation">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/security.xml/ApexDangerousMethods" message="Calling potentially dangerous method">
		<priority>1</priority>
	</rule>

	<!-- EMPTY BLOCKS -->
	<rule ref="category/apex/errorprone.xml/EmptyCatchBlock" message="Avoid empty catch blocks">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/EmptyIfStmt" message="Avoid empty 'if' statements">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/EmptyWhileStmt" message="Avoid empty 'while' statements">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/EmptyTryOrFinallyBlock" message="Avoid empty try or finally blocks">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/EmptyStatementBlock" message="Avoid empty block statements.">
		<priority>1</priority>
	</rule>

	<!-- CLARITY / BEST PRACTICES -->
	<rule ref="category/apex/errorprone.xml/InaccessibleAuraEnabledGetter">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/OverrideBothEqualsAndHashcode">
		<priority>1</priority>
	</rule>
</ruleset>